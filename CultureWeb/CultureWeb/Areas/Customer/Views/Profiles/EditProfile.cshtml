@model CultureWeb.Models.ApplicationUser
@{
    ViewData["Title"] = @localizer["Profile"];
}

@using CultureWeb.Models;
@using CultureWeb.Utility;
@using Microsoft.AspNetCore.Http
@using System.Security.Claims;
@inject IViewLocalizer localizer
@inject IHttpContextAccessor HttpContextAccessor
@{
    //var userRole = HttpContextAccessor.HttpContext.Session.GetString("roleName");
    int count = 0;
    List<Products> products = HttpContextAccessor.HttpContext.Session.Get<List<Products>>("products");
    if (products == null)
    {
        products = new List<Products>();
    }
    count = products.Count();

}

<style>
    .gradient-custom {
        /* fallback for old browsers */
        background: #f6d365;
        /* Chrome 10-25, Safari 5.1-6 */
        background: -webkit-linear-gradient(to right bottom, rgba(246, 211, 101, 1), rgba(253, 160, 133, 1));
        /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
        background: linear-gradient(to right bottom, rgba(246, 211, 101, 1), rgba(253, 160, 133, 1))
    }

    .upload {
        width: 200px;
        position: relative;
        margin: auto;
    }

        .upload img {
            border-radius: 50%;
            transition: 0.2s ease-in;
        }

            .upload img:hover {
                filter: contrast(40%);
                cursor: pointer;
            }

        .upload:hover .round {
            opacity: 1;
        }

        .upload .round {
            position: absolute;
            bottom: 0;
            right: 20px;
            background: #6c6f70;
            width: 40px;
            height: 40px;
            line-height: 40px;
            text-align: center;
            border-radius: 50%;
            overflow: hidden;
            opacity: 0;
            transition: 0.5s ease-in;
        }

            .upload .round input[type = "file"] {
                position: absolute;
                transform: scale(2);
                opacity: 0;
            }

    input[type=file]::-webkit-file-upload-button {
        cursor: pointer;
    }

    .nav-link.active {
        color: rgb(16, 143, 241);
    }
</style>
<div class="bg-main bg-light">
    <div class="container">
        <div class="box py-5 d-flex justify-content-between">
            <div class="breadcumb nav-link mt-2">
                <a asp-action="Index" asp-controller="Home" class="text-decoration-none text-dark mx-3">@localizer["Home"]</a>
                <span><i class="fa-solid fa-chevron-right"></i></span>
                <a ahref="#" class="text-decoration-none text-dark mx-3">@localizer["Profile"]</a>

            </div>
            <div class="breadcumb nav-link d-flex">
                <a class="nav-link mt-2" asp-area="Customer" asp-controller="Home" asp-action="Cart" title="@localizer["Cart"]">
                    <i class="fa-solid fa-bag-shopping"></i>
                    (@count)
                </a>
                @if (!User.Identity.IsAuthenticated)
                {
                    <a id="login" asp-area="Identity" asp-page="/Account/Login" class="nav-link mt-2 mx-3"><i class="fa fa-heart"></i></a>
                }
                else
                {

                    <a asp-area="Customer" asp-controller="Home" asp-action="FavoriteProduct" class="nav-link mt-2 mx-3" title="@localizer["Favorite"]"><i class="fa fa-heart"></i> (@ViewBag.FavoriteProductCount)</a>

                }

                <a href="#" class="text-decoration-none text-dark mx-3 nav-link">
                    @{
                        var culture = Context.Features.Get<IRequestCultureFeature>();
                        var cultureList = locOptions.Value.SupportedUICultures.Select(x => new SelectListItem { Value = x.Name, Text = localizer.GetString(x.Name) }).ToList();
                        var returnUrl = string.IsNullOrWhiteSpace(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}{Context.Request.QueryString}";
                    }

                    <form method="post" asp-area="Customer" asp-action="ChangeLanguage" asp-controller="Home" asp-route-returnUrl="@returnUrl">
                        <select class="form-select bg-light border-none " name="culture" asp-for="@culture.RequestCulture.UICulture.Name" asp-items="cultureList" onchange="this.form.submit();">
                        </select>
                    </form>
                </a>
            </div>
        </div>
        <div class="row">
            <form asp-action="EditProfile" method="post" enctype="multipart/form-data">
                <div class="col-12  d-flex flex-column justify-content-center">
                    <div class="d-flex flex-column align-items-center text-center p-5">
                        <div class="upload rounded-circle position-relative">
                            @if (!string.IsNullOrEmpty(Model.Image))
                            {
                                <img src="@("~/Images/User/"+Model.Image)" asp-append-version="true" width=200 height=200 alt="Profile" class="rounded-circle object-fit position-relative" style="object-fit: cover;">
                                <!-- Absolute position for imagePreview -->
                                <img id="imagePreview" src="#" alt="Image Preview" class="rounded-circle object-fit position-absolute" style="display: none; object-fit: cover; width: 200px; height: 200px; top: 0; left: 0;">
                            }
                            else
                            {
                                <img src="~/images/user.jpg" asp-append-version="true" width=200 height=200 alt="Profile" class="rounded-circle object-fit position-relative" style="object-fit: cover;">
                                <!-- Absolute position for imagePreview -->
                                <img id="imagePreview" src="#" alt="Image Preview" class="rounded-circle object-fit position-absolute" style="display: none; object-fit: cover; width: 200px; height: 200px; top: 0; left: 0;">
                            }
                            <div class="round">
                                <!-- Hidden file input -->
                                <input asp-for="ImageFile" type="file" asp-accept="image/*" multiple="" data-max_length="20" onchange="displayImagePreview(this)">
                                <i class="fas fa-camera" style="color: #fff;"></i>
                            </div>
                        </div>



                        <span class="fw-bold d-flex text-dark mt-3 fs-5">
                            <input asp-for="FirstName" class="form-control w-75" data-val-required="@localizer["First Name is required."]" />  <input asp-for="LastName" class="form-control w-75 mx-2" data-val-required="@localizer["Last Name is required."]" />
                            @*   @if (Model.LockoutEnd > DateTime.Now && Model.LockoutEnd != null)
                            {
                            <i class="fas fa-minus-circle text-danger mx-1" title="@localizer["Inactive"]"></i>
                            }
                            else
                            {
                            <i class="fas fa-check-circle text-success mx-1" title="@localizer["Active"]"></i>
                            } *@
                        </span>
                        <span class="mt-1 text-primary fs-6 d-flex"><input asp-for="UserName" class="form-control" data-val-required="@localizer["Email is required."]" ​​​​ aria-required="true" required /></span>

                    </div>


                </div>

                <div class=" my-3 d-flex justify-content-end">
                    <div class="pt-options ">
                        <a asp-action="Profile" class="btn btn-danger mx-2 "> @localizer["Cancel"] </a>
                        <button type="submit" class="btn btn-dark mx-2 "> @localizer["Update"] </button>
                    </div>

                </div>
            </form>
        </div>
    </div>
</div>

<!-- Content Row -->
@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function displayImagePreview(input) {
            const imagePreview = document.getElementById("imagePreview");

            if (input.files && input.files[0]) {
                const reader = new FileReader();

                reader.onload = function (e) {
                    imagePreview.src = e.target.result;
                    imagePreview.style.display = "block";
                };

                reader.readAsDataURL(input.files[0]);
            } else {
                imagePreview.style.display = "none";
            }
        }

    </script>
}

